{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import { PrismaClient } from '@prisma/client'\n// const prisma = new PrismaClient();\n// const getAllProducts = prisma.products.findMany();\n// interface IProduct {\n//     id: number,\n//     name: string,\n//     price: number\n// }\n// function renderProduct(product: IProduct) {\n//     return <tr key={product.id}>\n//         <td>{product.name}</td>\n//         <td>{product.price}</td>\n//     </tr>\n// }\n// async function fetchProductsRequest() {\n//   const response = await fetch(\"/api/products\");\n//   const data = await response.json();\n//   const { products } = data;\n//   return products;\n// }\nexport default function Products() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/products\");\n      const jsonData = await response.json();\n      setProducts(jsonData.payload);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  console.log(products);\n  console.log(products[0]);\n  console.log(products[0].name);\n  console.log(products[0].id);\n  console.log(products[0].price);\n  console.log(products[0].name); // const DisplayData=products.map(\n  //   (product)=>{\n  //       return(\n  //           <tr>\n  //               <td>{product.id}</td>\n  //               <td>{product.name}</td>\n  //               <td>{product.price}</td>\n  //           </tr>\n  //   const { data: products } = useQuery(\"Products\", () =>\n  //   axios.get(\"/products\").then((res) => res.data.products)\n  // );\n  // useEffect(() => {\n  //   (async () => {\n  //     const res = await axios.get('http://localhost:5000/products');\n  //     setProducts(res.data);\n  //   })();\n  // }, []);\n  // const { data: products } = useQuery(\"products\", fetchProductsRequest);\n  // useEffect(() => {\n  //     fetch('http://localhost:5000/api/products')\n  //         .then(response => response.json() as Promise<IProduct[]>)\n  //       .then(data => setProducts(data));\n  //       console.log(Response)\n  // }, []);\n  // const getAllProducts = async () => {\n  //       try {\n  //         const res = await axios({\n  //           method: 'GET',\n  //           url: 'http://localhost:5000/api/products'\n  //         });\n  //         console.log(res)\n  //         setProducts(res.data);\n  //         return res;\n  //       } catch (err:any) {\n  //         throw new Error(err.response?.data.message);\n  //       }\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Products, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx"],"names":["React","useState","useEffect","Products","products","setProducts","getProducts","response","fetch","jsonData","json","payload","err","console","error","message","log","name","id","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMK,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAL,MAAAA,WAAW,CAACI,QAAQ,CAACE,OAAV,CAAX;AACD,KALD,CAKE,OAAOC,GAAP,EAAgB;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAO,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAZ;AACAS,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAApB;AACAS,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,IAAxB;AACAJ,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAAR,CAAYc,EAAxB;AACAL,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAAR,CAAYe,KAAxB;AACAN,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,IAAxB,EAxBiC,CA0BjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKF;AACA;AACA;AAIE;AACA;AACA;AACA;AACA;AACA;AAGA;AAGE;AACA;AACA;AACA;AACA;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBAAO;AAAA,2BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,mBAAP;AAmBH;;GApGuBd,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n// import { PrismaClient } from '@prisma/client'\n\n// const prisma = new PrismaClient();\n// const getAllProducts = prisma.products.findMany();\n\n// interface IProduct {\n//     id: number,\n//     name: string,\n//     price: number\n// }\n\n// function renderProduct(product: IProduct) {\n//     return <tr key={product.id}>\n//         <td>{product.name}</td>\n//         <td>{product.price}</td>\n//     </tr>\n// }\n// async function fetchProductsRequest() {\n//   const response = await fetch(\"/api/products\");\n//   const data = await response.json();\n//   const { products } = data;\n//   return products;\n// }\n\n\nexport default function Products() {\n\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/products\");\n      const jsonData = await response.json();\n\n      setProducts(jsonData.payload);\n    } catch (err:any) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  console.log(products);\n  console.log(products[0]);\n  console.log(products[0].name);\n  console.log(products[0].id);\n  console.log(products[0].price);\n  console.log(products[0].name);\n\n  // const DisplayData=products.map(\n  //   (product)=>{\n  //       return(\n  //           <tr>\n  //               <td>{product.id}</td>\n  //               <td>{product.name}</td>\n  //               <td>{product.price}</td>\n  //           </tr>\n\n\n\n\n//   const { data: products } = useQuery(\"Products\", () =>\n//   axios.get(\"/products\").then((res) => res.data.products)\n// );\n\n\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const res = await axios.get('http://localhost:5000/products');\n  //     setProducts(res.data);\n  //   })();\n  // }, []);\n\n  \n  // const { data: products } = useQuery(\"products\", fetchProductsRequest);\n\n\n    // useEffect(() => {\n    //     fetch('http://localhost:5000/api/products')\n    //         .then(response => response.json() as Promise<IProduct[]>)\n    //       .then(data => setProducts(data));\n    //       console.log(Response)\n    // }, []);\n\n  \n\n// const getAllProducts = async () => {\n//       try {\n//         const res = await axios({\n//           method: 'GET',\n//           url: 'http://localhost:5000/api/products'\n//         });\n//         console.log(res)\n//         setProducts(res.data);\n//         return res;\n//       } catch (err:any) {\n//         throw new Error(err.response?.data.message);\n//       }\n//     };\n  \n  \n  \n  \n    return <>\n      <h2>Products</h2>\n      {/* products.map((product)=> {\n        return(\n      <><div key={product.id}>\n        {product.name}\n      </div></>\n        )}\n       */}\n      \n      \n      \n        {/* {products.map(product) => (\n          <li key={product.id}>\n            {product.name}\n          </li>\n        ))}\n                    {/* {products.map(l => renderProduct(l))} */}\n    </>\n}"]},"metadata":{},"sourceType":"module"}