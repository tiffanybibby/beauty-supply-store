{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction renderProduct(product) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, product.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n\nasync function fetchProductsRequest() {\n  const response = await fetch(\"/api/products\");\n  const data = await response.json();\n  const {\n    products\n  } = data;\n  return products;\n}\n\nexport default function Products() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const {\n    data: sightings\n  } = useQuery(\"sightings\", fetchSightingsRequest); // useEffect(() => {\n  //     fetch('http://localhost:5000/api/products')\n  //         .then(response => response.json() as Promise<IProduct[]>)\n  //       .then(data => setProducts(data));\n  //       console.log(Response)\n  // }, []);\n  // const getAllProducts = async () => {\n  //       try {\n  //         const res = await axios({\n  //           method: 'GET',\n  //           url: 'http://localhost:5000/api/products'\n  //         });\n  //         console.log(res)\n  //         setProducts(res.data);\n  //         return res;\n  //       } catch (err:any) {\n  //         throw new Error(err.response?.data.message);\n  //       }\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(l => renderProduct(l))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Products, \"NdWOJthzgDeFUVHDKHNjq53noqc=\", true);\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx"],"names":["React","useState","renderProduct","product","name","price","id","fetchProductsRequest","response","fetch","data","json","products","Products","setProducts","sightings","useQuery","fetchSightingsRequest","map","l"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;;AAcA,SAASC,aAAT,CAAuBC,OAAvB,EAA0C;AACtC,sBAAO;AAAA,4BACH;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,KAASF,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AACD,eAAeC,oBAAf,GAAsC;AACpC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeF,IAArB;AACA,SAAOE,QAAP;AACD;;AAGD,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACD,QAAD,EAAWE,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAES,IAAAA,IAAI,EAAEK;AAAR,MAAsBC,QAAQ,CAAC,WAAD,EAAcC,qBAAd,CAApC,CAJiC,CAO/B;AACA;AACA;AACA;AACA;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAMC;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKL,QAAQ,CAACM,GAAT,CAAaC,CAAC,IAAIjB,aAAa,CAACiB,CAAD,CAA/B;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBAAP;AAmBH;;GApDuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n// import { PrismaClient } from '@prisma/client'\n\n// const prisma = new PrismaClient();\n// const getAllProducts = prisma.products.findMany();\n\ninterface IProduct {\n    id: number,\n    name: string,\n    price: number\n}\n\nfunction renderProduct(product: IProduct) {\n    return <tr key={product.id}>\n        <td>{product.name}</td>\n        <td>{product.price}</td>\n    </tr>\n}\nasync function fetchProductsRequest() {\n  const response = await fetch(\"/api/products\");\n  const data = await response.json();\n  const { products } = data;\n  return products;\n}\n\n\nexport default function Products() {\n\n  const [products, setProducts] = useState([] as IProduct[]);\n  \n  const { data: sightings } = useQuery(\"sightings\", fetchSightingsRequest);\n\n\n    // useEffect(() => {\n    //     fetch('http://localhost:5000/api/products')\n    //         .then(response => response.json() as Promise<IProduct[]>)\n    //       .then(data => setProducts(data));\n    //       console.log(Response)\n    // }, []);\n\n  \n\n// const getAllProducts = async () => {\n//       try {\n//         const res = await axios({\n//           method: 'GET',\n//           url: 'http://localhost:5000/api/products'\n//         });\n//         console.log(res)\n//         setProducts(res.data);\n//         return res;\n//       } catch (err:any) {\n//         throw new Error(err.response?.data.message);\n//       }\n//     };\n  \n  \n  \n  \n    return <>\n        <h2>Products</h2>\n        {/* { {products.length === 0 ?  */}\n        {/* // <div>No product to display. */}\n          {/* Would you like to <Link to=\"admin\">add one</Link>?</div> */}\n        {/* : }  */}\n            <table className=\"table product-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map(l => renderProduct(l))}\n                </tbody>\n            </table>\n        {/* } */}\n    </>\n}"]},"metadata":{},"sourceType":"module"}