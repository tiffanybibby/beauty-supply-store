{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultProducts = [];\n\nfunction renderProduct(product) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, product.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n\nexport default function Products() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  React.useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/Products', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      timeout: 10000\n    }).then(response => {\n      setProducts(response.data); // setLoading(false);\n    }).catch(ex => {\n      let error = axios.isCancel(ex) ? 'Request Cancelled' : ex.code === 'ECONNABORTED' ? 'A timeout has occurred' : ex.response.status === 404 ? 'Resource Not Found' : 'An unexpected error has occurred';\n      setError(error); // setLoading(false);\n    });\n  }, []); // React.useEffect(() => {\n  //   (async () => {\n  //     const result = await axios(\n  //       'http://localhost:5000/api/products',\n  //     );\n  //     setProducts(result.data);\n  //   });\n  // useEffect(() => {\n  //     fetch('http://localhost:5000/api/products')\n  //         .then(response => response.json() as Promise<Product[]>)\n  //         .then(data => setProducts(data));\n  // }, []);\n  // const getAllProducts = async () => {\n  //       try {\n  //         const res = await axios({\n  //           method: 'GET',\n  //           url: '/api/products'\n  //         });\n  //         setProducts(res.data);\n  //         console.log(res)\n  //         return res;\n  //       } catch (err:any) {\n  //         throw new Error(err.response?.data.message);\n  //       }\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), \": */\", '}', /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(l => renderProduct(l))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Products, \"ywGKWcZLaXKoMdpJC0+0AVfawtw=\");\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx"],"names":["React","useState","axios","defaultProducts","renderProduct","product","name","price","id","Products","products","setProducts","useEffect","get","headers","timeout","then","response","data","catch","ex","error","isCancel","code","status","setError","map","l"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AASA,MAAMC,eAA0B,GAAG,EAAnC;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAA0C;AACtC,sBAAO;AAAA,4BACH;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,KAASF,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AAGD,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBV,IAAAA,KAAK,CACFW,GADH,CACmB,+CADnB,EACoE;AAChEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADuD;AAIhEC,MAAAA,OAAO,EAAE;AAJuD,KADpE,EAOGC,IAPH,CAOSC,QAAD,IAAc;AAClBN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAV,CAAX,CADkB,CAElB;AACD,KAVH,EAWGC,KAXH,CAWUC,EAAD,IAAQ;AACb,UAAIC,KAAK,GAAGnB,KAAK,CAACoB,QAAN,CAAeF,EAAf,IACR,mBADQ,GAERA,EAAE,CAACG,IAAH,KAAY,cAAZ,GACA,wBADA,GAEAH,EAAE,CAACH,QAAH,CAAYO,MAAZ,KAAuB,GAAvB,GACA,oBADA,GAEA,kCANJ;AAQAC,MAAAA,QAAQ,CAACJ,KAAD,CAAR,CATa,CAUb;AACD,KAtBH;AAuBD,GAxBD,EAwBG,EAxBH,EAJiC,CAgCjC;AACA;AACA;AACA;AACA;AAEA;AACA;AAEE;AACA;AACA;AACA;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,UAKE,GALF,eAMC;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKX,QAAQ,CAACgB,GAAT,CAAaC,CAAC,IAAIvB,aAAa,CAACuB,CAAD,CAA/B;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBAAP;AAmBH;;GArFuBlB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\ninterface IProduct {\n    id: number,\n    name: string,\n    price: number\n}\n\nconst defaultProducts:IProduct[] = [];\n\nfunction renderProduct(product: IProduct) {\n    return <tr key={product.id}>\n        <td>{product.name}</td>\n        <td>{product.price}</td>\n    </tr>\n}\n\n\nexport default function Products() {\n\n  const [products, setProducts] = useState([] as IProduct[]);\n  \n  React.useEffect(() => {\n    axios\n      .get<IProduct[]>('https://jsonplaceholder.typicode.com/Products', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        timeout: 10000,\n      })\n      .then((response) => {\n        setProducts(response.data);\n        // setLoading(false);\n      })\n      .catch((ex) => {\n        let error = axios.isCancel(ex)\n          ? 'Request Cancelled'\n          : ex.code === 'ECONNABORTED'\n          ? 'A timeout has occurred'\n          : ex.response.status === 404\n          ? 'Resource Not Found'\n          : 'An unexpected error has occurred';\n\n        setError(error);\n        // setLoading(false);\n      });\n  }, []);\n\n\n\n  // React.useEffect(() => {\n  //   (async () => {\n  //     const result = await axios(\n  //       'http://localhost:5000/api/products',\n  //     );\n  \n  //     setProducts(result.data);\n  //   });\n  \n    // useEffect(() => {\n    //     fetch('http://localhost:5000/api/products')\n    //         .then(response => response.json() as Promise<Product[]>)\n    //         .then(data => setProducts(data));\n    // }, []);\n\n  \n\n// const getAllProducts = async () => {\n//       try {\n//         const res = await axios({\n//           method: 'GET',\n//           url: '/api/products'\n//         });\n//         setProducts(res.data);\n//         console.log(res)\n//         return res;\n//       } catch (err:any) {\n//         throw new Error(err.response?.data.message);\n//       }\n//     };\n  \n  \n  \n  \n    return <>\n        <h2>Products</h2>\n        {/* {products.length === 0 ? \n        <div>No product to display.\n          {/* Would you like to <Link to=\"admin\">add one</Link>?</div> */}\n        : */{'}'}\n            <table className=\"table product-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map(l => renderProduct(l))}\n                </tbody>\n            </table>\n        {/* } */}\n    </>\n}"]},"metadata":{},"sourceType":"module"}