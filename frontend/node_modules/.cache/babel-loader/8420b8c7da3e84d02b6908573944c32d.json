{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/screens/ProductDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { updateNonNullChain } from \"typescript\"; // import { IProduct } from \"./Home\";\n// export interface IProductDetail {\n//   id: number;\n//   name: string;\n//   description: string;\n//   img: string;\n//   price: number;\n//   rating: number;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductDetail() {\n  _s();\n\n  const [product, setProduct] = useState(updateNonNullChain);\n  const [isLoaded, setLoaded] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const getProduct = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/product/${id}`);\n        const jsonData = await response.json();\n        setProduct(jsonData.payload);\n        setLoaded(true);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n\n    getProduct();\n  }, [id]);\n  console.log(product);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Detail\", \"id=\", product.id, \"name=\", product.name, \"img=\", product.img, \"description=\", product.description, \"price=\", product.price, \"rating=\", product.rating]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetail, \"XLgLgc+tCEDXrNm79M543rMwlss=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/screens/ProductDetail.tsx"],"names":["React","useState","useEffect","useParams","updateNonNullChain","ProductDetail","product","setProduct","isLoaded","setLoaded","id","getProduct","response","fetch","jsonData","json","payload","err","console","error","message","log","name","img","description","price","rating"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA+C,OAA/C;AAEA,SAASC,SAAT,QAAgC,kBAAhC;AACA,SAASC,kBAAT,QAAmC,YAAnC,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACG,kBAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,SAAX,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAES,IAAAA;AAAF,MAASP,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMS,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCH,EAAG,EAArC,CAA5B;AACA,cAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAR,QAAAA,UAAU,CAACO,QAAQ,CAACE,OAAV,CAAV;AACAP,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAND,CAME,OAAOQ,GAAP,EAAiB;AACjBC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,KAVD;;AAYET,IAAAA,UAAU;AACX,GAdQ,EAcN,CAACD,EAAD,CAdM,CAAT;AAgBAQ,EAAAA,OAAO,CAACG,GAAR,CAAYf,OAAZ;;AAEA,MAAI,CAACE,QAAL,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,gCAGgBF,OAAO,CAACI,EAHxB,WAIkBJ,OAAO,CAACgB,IAJ1B,UAKiBhB,OAAO,CAACiB,GALzB,kBAMyBjB,OAAO,CAACkB,WANjC,YAOmBlB,OAAO,CAACmB,KAP3B,aAQoBnB,OAAO,CAACoB,MAR5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzCuBrB,a;UAIPF,S;;;KAJOE,a","sourcesContent":["import React, { useState, useEffect, FC } from \"react\";\nimport ProductCard from \"../components/ProductCard\";\nimport { useParams, Link } from 'react-router-dom'\nimport { updateNonNullChain } from \"typescript\";\n\n// import { IProduct } from \"./Home\";\n\n// export interface IProductDetail {\n//   id: number;\n//   name: string;\n//   description: string;\n//   img: string;\n//   price: number;\n//   rating: number;\n// }\n\nexport default function ProductDetail() {\n\n  const [product, setProduct] = useState(updateNonNullChain);\n  const [isLoaded, setLoaded] = useState(false)\n  const { id } = useParams()\n\n  useEffect(() => {\n  const getProduct = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/product/${id}`);\n      const jsonData = await response.json();\n\n      setProduct(jsonData.payload);\n      setLoaded(true);\n    } catch (err: any) {\n      console.error(err.message);\n    }\n  };\n\n    getProduct();\n  }, [id]);\n\n  console.log(product);\n\n  if (!isLoaded) {\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <h1>\n      Detail\n      {/* <ProductCard */}\n                id={product.id}\n                name={product.name}\n                img={product.img}\n                description={product.description}\n                price={product.price}\n                rating={product.rating}\n              {/* /> */}\n    </h1>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}