{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\"; // Components\n\nimport Product from \"./Product/Product\";\nimport Cart from \"./Cart/components/Cart/Cart\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\"; // Types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch(\"http://localhost:5000/products\")).json();\n\nconst App = () => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartproducts, setCartproducts] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery(\"products\", getProducts);\n  console.log(data);\n\n  const getTotalproducts = products => Product.reduce((ack, product) => ack + Product.quantity, 0);\n\n  const handleAddToCart = clickedproduct => {\n    setCartproducts(prev => {\n      // 1. Is the product already added in the cart?\n      const isproductInCart = prev.find(product => product.id === clickedproduct.id);\n\n      if (isproductInCart) {\n        return prev.map(product => product.id === clickedproduct.id ? { ...product,\n          quantity: product.quantity + 1\n        } : product);\n      } // First time the product is added\n\n\n      return [...prev, { ...clickedproduct,\n        quantity: 1\n      }];\n    });\n  };\n\n  const handleRemoveFromCart = id => {\n    setCartproducts(prev => prev.reduce((ack, product) => {\n      if (product.id === id) {\n        if (product.quantity === 1) return ack;\n        return [...ack, { ...product,\n          quantity: product.quantity - 1\n        }];\n      } else {\n        return [...ack, product];\n      }\n    }, []));\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: cartOpen,\n      onClose: () => setCartOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cartproducts: cartproducts,\n        addToCart: handleAddToCart,\n        removeFromCart: handleRemoveFromCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setCartOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: getTotalproducts(cartproducts),\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n        product: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Ot/i1BOPz6vYZj9c8fpqwYpnhTM=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/App.tsx"],"names":["useState","useQuery","Product","Cart","Button","Drawer","LinearProgress","Grid","AddShoppingCartIcon","Badge","getProducts","fetch","json","App","cartOpen","setCartOpen","cartproducts","setCartproducts","data","isLoading","error","console","log","getTotalproducts","products","reduce","ack","product","quantity","handleAddToCart","clickedproduct","prev","isproductInCart","find","id","map","handleRemoveFromCart"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n// Components\nimport Product from \"./Product/Product\";\nimport Cart from \"./Cart/components/Cart/Cart\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n\n// Types\nexport type CartProductType = {\n  id: number;\n  name: string;\n  description: string;\n  category: string;\n  img: string;\n  price: number;\n  quantity: number;\n  countInStock: number;\n  rating: number;\n};\n\nconst getProducts = async (): Promise<CartProductType[]> =>\n  await (await fetch(\"http://localhost:5000/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartproducts, setCartproducts] = useState([] as CartProductType[]);\n  const { data, isLoading, error } = useQuery<CartProductType[]>(\n    \"products\",\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalproducts = (products: CartProductType[]) =>\n    Product.reduce((ack: number, product: any) => ack + Product.quantity, 0);\n\n  const handleAddToCart = (clickedproduct: CartProductType) => {\n    setCartproducts((prev) => {\n      // 1. Is the product already added in the cart?\n      const isproductInCart = prev.find(\n        (product) => product.id === clickedproduct.id\n      );\n\n      if (isproductInCart) {\n        return prev.map((product) =>\n          product.id === clickedproduct.id\n            ? { ...product, quantity: product.quantity + 1 }\n            : product\n        );\n      }\n      // First time the product is added\n      return [...prev, { ...clickedproduct, quantity: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartproducts((prev) =>\n      prev.reduce((ack, product) => {\n        if (product.id === id) {\n          if (product.quantity === 1) return ack;\n          return [...ack, { ...product, quantity: product.quantity - 1 }];\n        } else {\n          return [...ack, product];\n        }\n      }, [] as CartProductType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartproducts={cartproducts}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <Button onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalproducts(cartproducts)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </Button>\n      <Grid container spacing={3}>\n        {data?.map((product) => (\n          <Grid product key={product.id} xs={12} sm={4}>\n            <Product product={product} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}