{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/screens/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@mui/material';\nimport ProductCard from \"../components/ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Products() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/products\");\n      const jsonData = await response.json();\n      setProducts(jsonData.payload);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  console.log(products);\n  console.log(products[0]); // console.log(products[0].name);\n  // console.log(products[0].id);\n  // console.log(products[0].price);\n  // console.log(products[0].img);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.img,\n          alt: \"product photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), product.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 40\n        }, this), product.price, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this), product.rating, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 35\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        \"aria-label\": \"product card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/product/${product._id}`,\n          children: /*#__PURE__*/_jsxDEV(ProductCard, {\n            name: product.name,\n            description: product.description,\n            image: product.img,\n            currentAmount: product.current_amount,\n            goalAmount: product.goal_amount,\n            contributions: product.contributions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true);\n}\n\n_s(Products, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/screens/Home.tsx"],"names":["React","useState","useEffect","Link","Grid","ProductCard","Products","products","setProducts","getProducts","response","fetch","jsonData","json","payload","err","console","error","message","log","map","product","name","img","description","price","rating","id","_id","current_amount","goal_amount","contributions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAcC,IAAd,QAA0B,eAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAWA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAa,EAAb,CAAxC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAL,MAAAA,WAAW,CAACI,QAAQ,CAACE,OAAV,CAAX;AACD,KALD,CAKE,OAAOC,GAAP,EAAiB;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAO,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAZ;AACAS,EAAAA,OAAO,CAACG,GAAR,CAAYZ,QAAQ,CAAC,CAAD,CAApB,EAnBiC,CAoBjC;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,QAAQ,CAACa,GAAT,CAAcC,OAAD,iBACZ;AAAA,8BACA;AAAA,mBACGA,OAAO,CAACC,IADX,oBACiB;AAAA;AAAA;AAAA;AAAA,gBADjB,oBACwB;AAAA;AAAA;AAAA;AAAA,gBADxB,eAEE;AAAK,UAAA,GAAG,EAAED,OAAO,CAACE,GAAlB;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGF,OAAO,CAACG,WAHX,oBAGwB;AAAA;AAAA;AAAA;AAAA,gBAHxB,oBAG+B;AAAA;AAAA;AAAA;AAAA,gBAH/B,EAIGH,OAAO,CAACI,KAJX,oBAIkB;AAAA;AAAA;AAAA;AAAA,gBAJlB,oBAIyB;AAAA;AAAA;AAAA;AAAA,gBAJzB,EAKGJ,OAAO,CAACK,MALX,oBAKmB;AAAA;AAAA;AAAA;AAAA,gBALnB,oBAK0B;AAAA;AAAA;AAAA;AAAA,gBAL1B;AAAA,SAASL,OAAO,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA,cADA,eAQA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAA6B,sBAAW,cAAxC;AAAA,+BACY,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWN,OAAO,CAACO,GAAI,EAAlC;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,IAAI,EAAEP,OAAO,CAACC,IADhB;AAEE,YAAA,WAAW,EAAED,OAAO,CAACG,WAFvB;AAGE,YAAA,KAAK,EAAEH,OAAO,CAACE,GAHjB;AAIE,YAAA,aAAa,EAAEF,OAAO,CAACQ,cAJzB;AAKE,YAAA,UAAU,EAAER,OAAO,CAACS,WALtB;AAME,YAAA,aAAa,EAAET,OAAO,CAACU;AANzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADZ,SAAgBV,OAAO,CAACO,GAAxB;AAAA;AAAA;AAAA;AAAA,cARA;AAAA,oBADD,CAHH;AAAA,kBADF;AA6BD;;GAtDuBtB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Box, Grid } from '@mui/material';\nimport ProductCard from \"../components/ProductCard\"\n\ninterface IProduct {\n  id: number;\n  name: string;\n  description: string;\n  img: string;\n  price: number;\n  rating: number;\n}\n\nexport default function Products() {\n  const [products, setProducts] = useState<IProduct[]>([]);\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/products\");\n      const jsonData = await response.json();\n\n      setProducts(jsonData.payload);\n    } catch (err: any) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  console.log(products);\n  console.log(products[0]);\n  // console.log(products[0].name);\n  // console.log(products[0].id);\n  // console.log(products[0].price);\n  // console.log(products[0].img);\n\n  return (\n    <>\n      <h2>Products</h2>\n\n      {products.map((product: IProduct) => (\n        <>\n        <li key={product.id}>\n          {product.name} <br /> <br />\n          <img src={product.img} alt=\"product photo\" />\n          {product.description} <br /> <br />\n          {product.price} <br /> <br />\n          {product.rating} <br /> <br />\n        </li>\n        <Grid item key={product._id} aria-label=\"product card\">\n                    <Link to={`/product/${product._id}`}>\n                      <ProductCard\n                        name={product.name}\n                        description={product.description}\n                        image={product.img}\n                        currentAmount={product.current_amount}\n                        goalAmount={product.goal_amount}\n                        contributions={product.contributions}\n                      />\n                    </Link>\n          </Grid>\n          </>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}