{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import { PrismaClient } from '@prisma/client'\n// const prisma = new PrismaClient();\n// const getAllProducts = prisma.products.findMany();\n// interface IProduct {\n//     id: number,\n//     name: string,\n//     price: number\n// }\n// function renderProduct(product: IProduct) {\n//     return <tr key={product.id}>\n//         <td>{product.name}</td>\n//         <td>{product.price}</td>\n//     </tr>\n// }\nasync function fetchProductsRequest() {\n  const response = await fetch(\"/api/products\");\n  const data = await response.json();\n  const {\n    products\n  } = data;\n  return products;\n}\n\nexport default function Products() {\n  _s();\n\n  // const [products, setProducts] = useState([] as IProduct[]);\n  const {\n    data: products\n  } = useQuery(\"products\", fetchProductsRequest); // useEffect(() => {\n  //     fetch('http://localhost:5000/api/products')\n  //         .then(response => response.json() as Promise<IProduct[]>)\n  //       .then(data => setProducts(data));\n  //       console.log(Response)\n  // }, []);\n  // const getAllProducts = async () => {\n  //       try {\n  //         const res = await axios({\n  //           method: 'GET',\n  //           url: 'http://localhost:5000/api/products'\n  //         });\n  //         console.log(res)\n  //         setProducts(res.data);\n  //         return res;\n  //       } catch (err:any) {\n  //         throw new Error(err.response?.data.message);\n  //       }\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(l => renderProduct(l))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Products, \"0s7AabUT5fa0kFPB7tEk+sPg3+Q=\", true);\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/tiffanybibby/Code/Interview Projects/beauty-supply-store/frontend/src/components/Products.tsx"],"names":["React","fetchProductsRequest","response","fetch","data","json","products","Products","useQuery","map","l","renderProduct"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,oBAAf,GAAsC;AACpC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeF,IAArB;AACA,SAAOE,QAAP;AACD;;AAGD,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC;AAEA,QAAM;AAAEH,IAAAA,IAAI,EAAEE;AAAR,MAAqBE,QAAQ,CAAC,UAAD,EAAaP,oBAAb,CAAnC,CAJiC,CAO/B;AACA;AACA;AACA;AACA;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAMC;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKK,QAAQ,CAACG,GAAT,CAAaC,CAAC,IAAIC,aAAa,CAACD,CAAD,CAA/B;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBAAP;AAmBH;;GApDuBH,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n// import { PrismaClient } from '@prisma/client'\n\n// const prisma = new PrismaClient();\n// const getAllProducts = prisma.products.findMany();\n\n// interface IProduct {\n//     id: number,\n//     name: string,\n//     price: number\n// }\n\n// function renderProduct(product: IProduct) {\n//     return <tr key={product.id}>\n//         <td>{product.name}</td>\n//         <td>{product.price}</td>\n//     </tr>\n// }\nasync function fetchProductsRequest() {\n  const response = await fetch(\"/api/products\");\n  const data = await response.json();\n  const { products } = data;\n  return products;\n}\n\n\nexport default function Products() {\n\n  // const [products, setProducts] = useState([] as IProduct[]);\n  \n  const { data: products } = useQuery(\"products\", fetchProductsRequest);\n\n\n    // useEffect(() => {\n    //     fetch('http://localhost:5000/api/products')\n    //         .then(response => response.json() as Promise<IProduct[]>)\n    //       .then(data => setProducts(data));\n    //       console.log(Response)\n    // }, []);\n\n  \n\n// const getAllProducts = async () => {\n//       try {\n//         const res = await axios({\n//           method: 'GET',\n//           url: 'http://localhost:5000/api/products'\n//         });\n//         console.log(res)\n//         setProducts(res.data);\n//         return res;\n//       } catch (err:any) {\n//         throw new Error(err.response?.data.message);\n//       }\n//     };\n  \n  \n  \n  \n    return <>\n        <h2>Products</h2>\n        {/* { {products.length === 0 ?  */}\n        {/* // <div>No product to display. */}\n          {/* Would you like to <Link to=\"admin\">add one</Link>?</div> */}\n        {/* : }  */}\n            <table className=\"table product-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map(l => renderProduct(l))}\n                </tbody>\n            </table>\n        {/* } */}\n    </>\n}"]},"metadata":{},"sourceType":"module"}